kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: monitoring-grafana-agent
  labels:
    app.kubernetes.io/instance: monitoring
    app.kubernetes.io/managed-by: Kustomize
    app.kubernetes.io/name: grafana-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: monitoring
      app.kubernetes.io/name: grafana-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: monitoring
        app.kubernetes.io/name: grafana-agent
    spec:
      restartPolicy: Always
      serviceAccountName: monitoring-grafana-agent
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: grafana-agent
          env:
            - name: AGENT_MODE
              value: flow
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: AGENT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: grafana-agent-secrets
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/agent
          terminationMessagePolicy: File
          image: 'docker.io/grafana/agent:v0.38.1'
          args:
            - run
            - /etc/agent/config.river
            - '--storage.path=/tmp/agent'
            - '--server.http.listen-addr=0.0.0.0:8080'
            - '--server.http.ui-path-prefix=/'
        - name: config-reloader
          image: 'docker.io/jimmidyson/configmap-reload:v0.8.0'
          args:
            - '--volume-dir=/etc/agent'
            - '--webhook-url=http://localhost:8080/-/reload'
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          volumeMounts:
            - name: config
              mountPath: /etc/agent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      serviceAccount: monitoring-grafana-agent
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config
            defaultMode: 420
      dnsPolicy: ClusterFirst
  serviceName: monitoring-grafana-agent
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  minReadySeconds: 10
